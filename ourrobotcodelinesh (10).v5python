{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain and basic setup\nbrain = Brain()\n\n# Motor configuration\nleft_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_18_1, True)\nleft_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_18_1, True)\nleft_drive = MotorGroup(left_motor_a, left_motor_b)\n\nright_motor_a = Motor(Ports.PORT2, GearSetting.RATIO_18_1, True)\nright_motor_b = Motor(Ports.PORT3, GearSetting.RATIO_18_1, True)\nright_drive = MotorGroup(right_motor_a, right_motor_b)\n\n# Sensors\ndistance_sensor = Distance(Ports.PORT11)\nline_tracker = Line(brain.three_wire_port.a)  # Make sure your line tracker is in port A\n\n# Clear screen\nwait(300, MSEC)\nprint(\"\\033[2J\")\n\ndef when_started():\n    while True:\n        brain.screen.clear_screen()\n        brain.screen.set_cursor(1, 1)\n        brain.screen.print(\"Scanning...\")\n\n        # === LINE TRACKER CHECK ===\n        if line_tracker.reflectivity() <  :  # Adjust threshold if needed\n            brain.screen.set_cursor(2, 1)\n            brain.screen.print(\"Line detected! Turning around...\")\n\n            # Spin 180 degrees (adjust time if needed)\n            left_drive.spin(REVERSE, 50, PERCENT)\n            right_drive.spin(REVERSE, 50, PERCENT)\n            wait(1.2, SECONDS)\n\n            left_drive.stop(BRAKE)\n            right_drive.stop(BRAKE)\n            wait(0.5, SECONDS)\n            continue  # Skip the rest and start scanning again\n\n        # Normal scanning motion\n        left_drive.spin(FORWARD, 20, PERCENT)\n        right_drive.spin(FORWARD, 20, PERCENT)\n        wait(1, SECONDS)\n\n        left_drive.stop()\n        right_drive.stop()\n        wait(0.1, SECONDS)\n\n        distance_mm = distance_sensor.object_distance(DistanceUnits.MM)\n        brain.screen.set_cursor(2, 1)\n        brain.screen.print(\"Distance: \" + str(distance_mm))\n\n        if 0 < distance_mm < 400:\n            brain.screen.set_cursor(3, 1)\n            brain.screen.print(\"Target detected!\")\n\n            # Move forward\n            left_drive.spin(REVERSE, 70, PERCENT)\n            right_drive.spin(FORWARD, 70, PERCENT)\n            wait(2.5, SECONDS)\n\n            # Tiny reverse\n            left_drive.spin(FORWARD, 50, PERCENT)\n            right_drive.spin(REVERSE, 50, PERCENT)\n            wait(1, SECONDS)\n\n            # Final charge\n            left_drive.spin(REVERSE, 100, PERCENT)\n            right_drive.spin(FORWARD, 100, PERCENT)\n            wait(2.5, SECONDS)\n\n            left_drive.stop(BRAKE)\n            right_drive.stop(BRAKE)\n            brain.screen.set_cursor(4, 1)\n            brain.screen.print(\"Attack complete.\")\n            wait(1, SECONDS)\n\n        else:\n            brain.screen.set_cursor(3, 1)\n            brain.screen.print(\"No target. Keep scanning.\")\n\n        wait(0.3, SECONDS)\n\n# Start the program\nwhen_started()\n","textLanguage":"python","robotConfig":[],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.8","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}